AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: TestWatchServerless
Globals:
  Function:
    Timeout: 3

Parameters:
  SlackWebhookUrl:
    Type: String
    Default: hoge

Resources:

  # CloudWatchアラーム用のTopic
  TestWatchServerlessAlarmTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: TestWatchServerlessAlarmTopic
      DisplayName: TestWatchServerlessAlarmTopic

  # DLQ用のTopic
  TestWatchServerlessDLQTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: TestWatchServerlessDLQTopic
      DisplayName: TestWatchServerlessDLQTopic

  # API Gatewayの定義
  HelloWorldApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      DefinitionBody:
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: s3://cm-fujii.genki-sam-test-bucket/TestWatchServerlessApi.yaml

  # Lambda1の定義（API Gatewayの裏側）
  HelloWorldFunction1:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/lambda1
      Handler: app.lambda_handler
      Runtime: python3.6
      Environment:
        Variables:
          TARGET_LAMBDA_FUNCTION: !Ref HelloWorldFunction2
      Policies:
        LambdaInvokePolicy:
          FunctionName: !Ref HelloWorldFunction2
      Events:
        HelloWorld:
          Type: Api
          Properties:
            Path: /hello
            Method: get
            RestApiId: !Ref HelloWorldApi

  # Lambda2の定義（非同期実行される側）
  HelloWorldFunction2:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/lambda2
      Handler: app.lambda_handler
      Runtime: python3.6
      DeadLetterQueue:
        Type: SNS
        TargetArn: !Ref TestWatchServerlessDLQTopic

  # Lambda3の定義（Slack通知用）
  NotifySlackFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/notify_slack
      Handler: app.lambda_handler
      Runtime: python3.6
      Environment:
        Variables:
          # このURLはコミット＆公開したくないため、デプロイ時にコマンドで設定する
          SLACK_WEBHOOK_URL: !Ref SlackWebhookUrl
      Events:
        SnsAlarmTopic:
          Type: SNS
          Properties:
            Topic: !Ref TestWatchServerlessAlarmTopic
        SnsDLQTopic:
          Type: SNS
          Properties:
            Topic: !Ref TestWatchServerlessDLQTopic

  # CloudWatchアラームの定義（Lambda1のErros用）
  AlarmFunction1Errors:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: Lambda1Errors
      Namespace: AWS/Lambda
      Dimensions:
        - Name: Resource
          Value: !Ref HelloWorldFunction1
        - Name: FunctionName
          Value: !Ref HelloWorldFunction1
      MetricName: Errors
      ComparisonOperator: GreaterThanOrEqualToThreshold  # 閾値以上
      Period: 60  # 期間[s]
      EvaluationPeriods: 1  # 閾値を超えた回数
      Statistic: Maximum  # 最大
      Threshold: 1  # 閾値
      AlarmActions:
        - !Ref TestWatchServerlessAlarmTopic  # アラーム発生時のアクション

  # CloudWatchアラームの定義（Lambda2のErros用）
  AlarmFunction2Errors:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: Lambda2Errors
      Namespace: AWS/Lambda
      Dimensions:
        - Name: Resource
          Value: !Ref HelloWorldFunction2
        - Name: FunctionName
          Value: !Ref HelloWorldFunction2
      MetricName: Errors
      ComparisonOperator: GreaterThanOrEqualToThreshold  # 閾値以上
      Period: 60  # 期間[s]
      EvaluationPeriods: 1  # 閾値を超えた回数
      Statistic: Maximum  # 最大
      Threshold: 1  # 閾値
      AlarmActions:
        - !Ref TestWatchServerlessAlarmTopic  # アラーム発生時のアクション

  # CloudWatchアラームの定義（API Gatewayの5XXError用）
  AlarmApi5XXError:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: Api5XXError
      Namespace: AWS/ApiGateway
      Dimensions:
        - Name: ApiName
          Value: Test Watch Serverless API  # Swaggerファイルの title に合わせる
        - Name: Stage
          Value: Prod
      MetricName: 5XXError
      ComparisonOperator: GreaterThanOrEqualToThreshold  # 閾値以上
      Period: 60  # 期間[s]
      EvaluationPeriods: 1  # 閾値を超えた回数
      Statistic: Maximum  # 最大
      Threshold: 1  # 閾値
      AlarmActions:
        - !Ref TestWatchServerlessAlarmTopic  # アラーム発生時のアクション

Outputs:

  HelloWorldApi:
    Description: "API Gateway endpoint URL for Prod stage for Hello World function"
    Value: !Sub "https://${HelloWorldApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"

